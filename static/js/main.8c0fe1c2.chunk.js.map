{"version":3,"sources":["components/Loading.js","components/Country.js","App.js","index.js"],"names":["Loading","_jsx","React","Fragment","children","_jsxs","className","Country","_ref","results","getCountry","console","log","newdata","Object","entries","map","_ref2","i","key","value","name","common","capital","population","languages","_ref3","ele","borders","join","currencies","_ref4","symbol","src","flags","png","App","userInput","setUserInput","useState","setResults","loading","setLoading","useEffect","setTimeout","textToUrl","encodeURIComponent","endPoint","concat","axios","then","data","catch","err","onSubmit","e","preventDefault","type","onChange","target","placeholder","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8c0fe1c2.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Loading = ()=>{\n    return (\n        <React.Fragment>\n          <div className=\"father-load\" >\n        <div className=\"load\"></div>\n        <h2 className=\"load-word\">Loading</h2>\n      </div>\n              </React.Fragment>\n      );\n          \n};\nexport default Loading;","import React from \"react\";\nconst Country = ({ results, getCountry })=>{\n  console.log(results);\n  const newdata = Object.entries(results).map(([key,value], i)=>{\n    console.log(value);\n    return(\n      <div className=\"father\">\n        <div className=\"flexRow\">\n        <span >Name:</span><p >{value.name.common}</p> \n        </div>\n        <div className=\"flexRow\">\n\n        <span >Capital::</span> <p>{value.capital}</p>\n        </div>\n        <div className=\"flexRow\">\n\n        <span >Population::</span><p>{value.population}</p>\n        </div>\n        <div className=\"flexRow\">\n          {/* here i want to map because i have object inside object in api */}\n\n        <span >Language:</span><p className=\"fatherlanguage\">{Object.entries(value.languages).map(([ele], i)=>{\n          return(\n            <div className=\"father-lang-info\">\n              <p>{ele}</p>\n            </div>\n          )\n        })}</p>\n        </div>\n        <div className=\"flexRow\">\n                    {/*here i used join to with citeria which is space to make spaces bwtween borders */}\n        <span >Borders:</span> <div className=\"border-father\"><p className=\"borders\">\t{value.borders.join(\" \")}</p></div>\n        </div>\n              <div className=\"flexRowCurrency\">\n        <span>Currency:</span><div className=\"currency\">{Object.entries(value.currencies).map(([key,value], i)=>{\n          return(\n            <div className=\"currencyInfo\">\n            <p>{value.name}</p><p>{value.symbol}</p>\n            </div>\n          )\n        })}</div>\n        </div>\n      \n        <div className=\"flaFather\">\n              <img src={value.flags.png}/>\n              </div>\n      </div>\n    )\n  })\n  return <React.Fragment>\n    <p >\n      {newdata}   \n    </p>\n  </React.Fragment>;\n}\nexport default Country;","\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport Loading from \"./components/Loading\";\nimport Country from \"./components/Country\";\nconst App = () => {\n  //here to update and hack user input\n  const [userInput, setUserInput] = useState(\"\");\n  // here to have infos from api reqzst\n  const [results, setResults] = useState([]);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    setTimeout(() => {\n      setLoading(false);\n    }, 2000);\n  }, []);\n  //we need here staus because thi API is changeable\n  const getCountry = (name)=>{\n    // this method transfer can understand any input which is in English\n    let textToUrl = encodeURIComponent(userInput);\n    console.log(textToUrl);\n    let endPoint = `https://restcountries.com/v3.1/name/${textToUrl}`;\n  \n    axios(endPoint)\n      .then(( data ) => setResults(data.data))\n      .catch((err) => console.log(`Your had an ${err}`));\n  }\n\n  function changeHandle(e) {\n    setUserInput(e.target.value);\n  }\n  function submitHandle(e) {\n    e.preventDefault();\n    getCountry(\"name\", userInput)\n    setUserInput(\"\");\n  }\n  if (loading) return <Loading />;\n\n  return (\n    <React.Fragment>\n      <div className=\"fatherInput\">\n      <div className=\"title\">Countries Information</div>\n      <form onSubmit={submitHandle}>\n        <input\n          type=\"text\"\n          value={userInput}\n          onChange={changeHandle}\n          placeholder=\"Write a country name\"\n        />\n        <button type=\"submit\">Search</button>\n      </form>\n      </div>\n      <Country results={results} getCountry = {getCountry} />\n    </React.Fragment>\n  );\n};\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport \"./sass/main.scss\";\n\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}