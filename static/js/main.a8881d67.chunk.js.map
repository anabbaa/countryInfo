{"version":3,"sources":["components/Loading.js","components/Country.js","App.js","index.js"],"names":["Loading","Fragment","className","Country","results","getCountry","lands","map","obj","i","console","log","name","flag","capital","population","borders","languages","currencies","border","onClick","currency","lang","iso639_1","src","alt","App","useState","userInput","setUserInput","setResults","loading","setLoading","useEffect","setTimeout","status","countryName","textToUrl","encodeURIComponent","endPoint","axios","then","data","catch","err","onSubmit","e","preventDefault","type","value","onChange","target","placeholder","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+MAmBeA,EAjBC,WACZ,OACI,cAAC,IAAMC,SAAP,UAGF,gCACE,qBAAKC,UAAU,SACf,+CCmCOC,EA1CC,SAAC,GAA6B,IAA3BC,EAA0B,EAA1BA,QAASC,EAAiB,EAAjBA,WACpBC,EAAQF,EAAQG,KAAI,SAACC,EAAKC,GAC9BC,QAAQC,IAAIH,GACZ,IAAQI,EAAoEJ,EAApEI,KAAMC,EAA8DL,EAA9DK,KAAMC,EAAwDN,EAAxDM,QAASC,EAA+CP,EAA/CO,WAAYC,EAAmCR,EAAnCQ,QAASC,EAA0BT,EAA1BS,UAAWC,EAAeV,EAAfU,WAC7D,OACE,8BACC,sBAAKhB,UAAU,SAAf,UAEC,4BAAIU,IACJ,0CAAaE,KACb,6CAAgBC,KAEhB,sBAAKb,UAAU,SAAf,oBACGc,EAAQT,KAAI,SAACY,EAAQV,GAAT,OACX,uBAAeW,QAAS,kBAAMf,EAAW,OAAQc,IAAjD,qBACkBA,IADNV,SAMhB,oBAAGP,UAAU,WAAb,uBAAmCgB,EAAWX,KAAI,SAACc,GAAD,OAChD,sBAAMD,QAAS,kBAAKf,EAAW,WAAYgB,EAAST,OAApD,SAA4DS,EAAST,aAKvE,oBAAGV,UAAU,OAAb,sBAEGe,EAAUV,KAAI,SAACe,GAAD,OACb,sBAAMF,QAAS,kBAAMf,EAAW,OAAQiB,EAAKC,WAA7C,SACGD,EAAKV,aAIZ,qBAAKY,IAAKX,EAAMY,IAAKb,EAAMV,UAAU,WA5BTO,QAkClC,OAAO,cAAC,IAAMR,SAAP,UAAiBK,KCWXoB,EAhDH,WACV,MAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAA8BF,mBAAS,IAAvC,mBAAOvB,EAAP,KAAgB0B,EAAhB,KACA,EAA8BH,oBAAS,GAAvC,mBAAOI,EAAP,KAAgBC,EAAhB,KACAC,qBAAU,WACRC,YAAW,WACTF,GAAW,KACV,OACF,IACH,IAAM3B,EAAa,SAAC8B,EAAQC,GAC1B,IAAIC,EAAYC,mBAAmBV,GACnClB,QAAQC,IAAI0B,GACZ,IAAIE,EAAQ,2CAAuCJ,EAAvC,YAAiDE,GAI7DG,IAAMD,GACHE,MAAK,gBAAGC,EAAH,EAAGA,KAAH,OAAcZ,EAAWY,MAC9BC,OAAM,SAACC,GAAD,OAASlC,QAAQC,IAAR,sBAA2BiC,QAW/C,OAAIb,EAAgB,cAAC,EAAD,IAGlB,eAAC,IAAM9B,SAAP,WACE,qBAAKC,UAAU,QAAf,mCACA,uBAAM2C,SAVV,SAAsBC,GACpBA,EAAEC,iBACF1C,EAAY,QACZwB,EAAa,KAOX,UACE,uBACEmB,KAAK,OACLC,MAAOrB,EACPsB,SAjBR,SAAsBJ,GACpBjB,EAAaiB,EAAEK,OAAOF,QAiBhBG,YAAY,yBAEd,wBAAQJ,KAAK,SAAb,uBAEF,cAAC,EAAD,CAAS5C,QAASA,EAASC,WAAcA,QCzC/CgD,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.a8881d67.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Loading = ()=>{\n    return (\n        <React.Fragment>\n      \n          \n      <div >\n        <div className=\"load\"></div>\n        <h1>Loading</h1>\n      </div>\n              </React.Fragment>\n    \n      );\n};\n\n\n\n\nexport default Loading;","import React from \"react\";\n\nconst Country = ({ results, getCountry }) => {\n  const lands = results.map((obj, i) => {\n    console.log(obj);\n    const { name, flag, capital, population, borders, languages, currencies } = obj;\n    return (\n      <div >\n       <div className=\"father\" key={i} >\n        \n        <p>{name}</p>\n        <p>Capital: {capital}</p>\n        <p>Population: {population}</p>\n        \n        <div className=\"border\">Border:\n          {borders.map((border, i) => (\n            <span  key={i} onClick={() => getCountry(\"name\", border)}>\n                 &nbsp;&nbsp;{border}\n            </span>\n          ))}\n        </div>\n        \n        <p className=\"currency\">Currency: {currencies.map((currency)=>(\n          <span onClick={()=> getCountry(\"currency\", currency.name)}>{currency.name}</span>\n        ))}\n\n        </p>\n\n        <p className=\"lang\">\n          language:\n          {languages.map((lang) => (\n            <span onClick={() => getCountry(\"lang\", lang.iso639_1)}>\n              {lang.name}\n            </span>\n          ))}\n        </p>\n        <img src={flag} alt={name} className=\"Flag\" />\n      </div>\n      </div> \n    );\n  });\n\n  return <React.Fragment>{lands}</React.Fragment>;\n};\nexport default Country;\n","\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport Loading from \"./components/Loading\";\nimport Country from \"./components/Country\";\nconst App = () => {\n  const [userInput, setUserInput] = useState(\"\");\n  const [results, setResults] = useState([]);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    setTimeout(() => {\n      setLoading(false);\n    }, 5000);\n  }, []);\n  const getCountry = (status, countryName)=>{\n    let textToUrl = encodeURIComponent(userInput);\n    console.log(textToUrl);\n    let endPoint = `https://restcountries.eu/rest/v2/${status}/${textToUrl}`;\n\n  \n\n    axios(endPoint)\n      .then(({ data }) => setResults(data))\n      .catch((err) => console.log(`Your had an ${err}`));\n  }\n\n  function changeHandle(e) {\n    setUserInput(e.target.value);\n  }\n  function submitHandle(e) {\n    e.preventDefault();\n    getCountry( \"name\", userInput)\n    setUserInput(\"\");\n  }\n  if (loading) return <Loading />;\n\n  return (\n    <React.Fragment>\n      <div className=\"title\">Countries Information</div>\n      <form onSubmit={submitHandle}>\n        <input\n          type=\"text\"\n          value={userInput}\n          onChange={changeHandle}\n          placeholder=\"Write a country name\"\n        />\n        <button type=\"submit\">Search</button>\n      </form>\n      <Country results={results} getCountry = {getCountry} />\n    </React.Fragment>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport \"./sass/main.scss\";\n\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}