{"version":3,"sources":["components/Loading.js","components/Country.js","App.js","index.js"],"names":["Loading","Fragment","className","Country","results","getCountry","console","log","newdata","Object","entries","map","i","value","name","common","capital","population","languages","ele","borders","join","currencies","symbol","src","flags","png","App","useState","userInput","setUserInput","setResults","loading","setLoading","useEffect","setTimeout","textToUrl","encodeURIComponent","endPoint","axios","then","data","catch","err","onSubmit","e","preventDefault","type","onChange","target","placeholder","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+MAaeA,EAXC,WACZ,OACI,cAAC,IAAMC,SAAP,UACE,sBAAKC,UAAU,cAAf,UACF,qBAAKA,UAAU,SACf,oBAAIA,UAAU,YAAd,2BCgDOC,EAtDC,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,QAAwB,EAAfC,WAC1BC,QAAQC,IAAIH,GACZ,IAAMI,EAAUC,OAAOC,QAAQN,GAASO,KAAI,WAAcC,GAAK,IAAD,mBAAZC,GAAY,WAE5D,OADAP,QAAQC,IAAIM,GAEV,sBAAKX,UAAU,SAAf,UACE,sBAAKA,UAAU,UAAf,UACA,yCAAmB,4BAAKW,EAAMC,KAAKC,YAEnC,sBAAKb,UAAU,UAAf,UAEA,6CAFA,IAEwB,4BAAIW,EAAMG,aAElC,sBAAKd,UAAU,UAAf,UAEA,gDAA0B,4BAAIW,EAAMI,gBAEpC,sBAAKf,UAAU,UAAf,UAGA,6CAAuB,mBAAGA,UAAU,iBAAb,SAA+BO,OAAOC,QAAQG,EAAMK,WAAWP,KAAI,WAAQC,GAAK,IAAXO,EAAU,oBACpG,OACE,qBAAKjB,UAAU,mBAAf,SACE,4BAAIiB,cAKV,sBAAKjB,UAAU,UAAf,UAEA,4CAFA,IAEuB,qBAAKA,UAAU,gBAAf,SAA+B,oBAAGA,UAAU,UAAb,cAAyBW,EAAMO,QAAQC,KAAK,aAE5F,sBAAKnB,UAAU,kBAAf,UACN,6CAAsB,qBAAKA,UAAU,WAAf,SAA2BO,OAAOC,QAAQG,EAAMS,YAAYX,KAAI,WAAcC,GAAK,IAAD,mBAAZC,GAAY,WACtG,OACE,sBAAKX,UAAU,eAAf,UACA,4BAAIW,EAAMC,OAAS,4BAAID,EAAMU,oBAMjC,qBAAKrB,UAAU,YAAf,SACM,qBAAKsB,IAAKX,EAAMY,MAAMC,cAKlC,OAAO,cAAC,IAAMzB,SAAP,UACL,4BACGO,OCKQmB,EAnDH,WAEV,MAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KAEA,EAA8BF,mBAAS,IAAvC,mBAAOxB,EAAP,KAAgB2B,EAAhB,KACA,EAA8BH,oBAAS,GAAvC,mBAAOI,EAAP,KAAgBC,EAAhB,KACAC,qBAAU,WACRC,YAAW,WACTF,GAAW,KACV,OACF,IAEH,IAAM5B,EAAa,SAACS,GAElB,IAAIsB,EAAYC,mBAAmBR,GACnCvB,QAAQC,IAAI6B,GACZ,IAAIE,EAAQ,8CAA0CF,GAEtDG,IAAMD,GACHE,MAAK,SAAEC,GAAF,OAAYV,EAAWU,EAAKA,SACjCC,OAAM,SAACC,GAAD,OAASrC,QAAQC,IAAR,sBAA2BoC,QAW/C,OAAIX,EAAgB,cAAC,EAAD,IAGlB,eAAC,IAAM/B,SAAP,WACE,sBAAKC,UAAU,cAAf,UACA,qBAAKA,UAAU,QAAf,mCACA,uBAAM0C,SAXV,SAAsBC,GACpBA,EAAEC,iBACFzC,EAAW,GACXyB,EAAa,KAQX,UACE,uBACEiB,KAAK,OACLlC,MAAOgB,EACPmB,SAlBR,SAAsBH,GACpBf,EAAae,EAAEI,OAAOpC,QAkBhBqC,YAAY,yBAEd,wBAAQH,KAAK,SAAb,0BAGF,cAAC,EAAD,CAAS3C,QAASA,EAASC,WAAcA,QC7C/C8C,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.b1ac15b7.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Loading = ()=>{\n    return (\n        <React.Fragment>\n          <div className=\"father-load\" >\n        <div className=\"load\"></div>\n        <h2 className=\"load-word\">Loading</h2>\n      </div>\n              </React.Fragment>\n      );\n          \n};\nexport default Loading;","import React from \"react\";\nconst Country = ({ results, getCountry })=>{\n  console.log(results);\n  const newdata = Object.entries(results).map(([key,value], i)=>{\n    console.log(value);\n    return(\n      <div className=\"father\">\n        <div className=\"flexRow\">\n        <span >Name:</span><p >{value.name.common}</p> \n        </div>\n        <div className=\"flexRow\">\n\n        <span >Capital::</span> <p>{value.capital}</p>\n        </div>\n        <div className=\"flexRow\">\n\n        <span >Population::</span><p>{value.population}</p>\n        </div>\n        <div className=\"flexRow\">\n          {/* here i want to map because i have object inside object in api */}\n\n        <span >Language:</span><p className=\"fatherlanguage\">{Object.entries(value.languages).map(([ele], i)=>{\n          return(\n            <div className=\"father-lang-info\">\n              <p>{ele}</p>\n            </div>\n          )\n        })}</p>\n        </div>\n        <div className=\"flexRow\">\n                    {/*here i used join to with citeria which is space to make spaces bwtween borders */}\n        <span >Borders:</span> <div className=\"border-father\"><p className=\"borders\">\t{value.borders.join(\" \")}</p></div>\n        </div>\n              <div className=\"flexRowCurrency\">\n        <span>Currency:</span><div className=\"currency\">{Object.entries(value.currencies).map(([key,value], i)=>{\n          return(\n            <div className=\"currencyInfo\">\n            <p>{value.name}</p><p>{value.symbol}</p>\n            </div>\n          )\n        })}</div>\n        </div>\n      \n        <div className=\"flaFather\">\n              <img src={value.flags.png}/>\n              </div>\n      </div>\n    )\n  })\n  return <React.Fragment>\n    <p >\n      {newdata}   \n    </p>\n  </React.Fragment>;\n}\nexport default Country;","\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport Loading from \"./components/Loading\";\nimport Country from \"./components/Country\";\nconst App = () => {\n  //here to update and hack user input\n  const [userInput, setUserInput] = useState(\"\");\n  // here to have infos from api reqzst\n  const [results, setResults] = useState([]);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    setTimeout(() => {\n      setLoading(false);\n    }, 2000);\n  }, []);\n  //we need here staus because thi API is changeable\n  const getCountry = (name)=>{\n    // this method transfer can understand any input which is in English\n    let textToUrl = encodeURIComponent(userInput);\n    console.log(textToUrl);\n    let endPoint = `https://restcountries.com/v3.1/name/${textToUrl}`;\n  \n    axios(endPoint)\n      .then(( data ) => setResults(data.data))\n      .catch((err) => console.log(`Your had an ${err}`));\n  }\n\n  function changeHandle(e) {\n    setUserInput(e.target.value);\n  }\n  function submitHandle(e) {\n    e.preventDefault();\n    getCountry(\"name\", userInput)\n    setUserInput(\"\");\n  }\n  if (loading) return <Loading />;\n\n  return (\n    <React.Fragment>\n      <div className=\"fatherInput\">\n      <div className=\"title\">Countries Information</div>\n      <form onSubmit={submitHandle}>\n        <input\n          type=\"text\"\n          value={userInput}\n          onChange={changeHandle}\n          placeholder=\"Write a country name\"\n        />\n        <button type=\"submit\">Search</button>\n      </form>\n      </div>\n      <Country results={results} getCountry = {getCountry} />\n    </React.Fragment>\n  );\n};\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport \"./sass/main.scss\";\n\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}